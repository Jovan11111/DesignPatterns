Ime:
Adapter, Wrapper (samo za objektni adapter)

Klasifikacija:
Klasni i objektni uzorak strukture

Namena: 
Konvertuje interfejs klase u drugi interfejs koij klijenti očekuju i time omogućava da rade zajedno klase koje inače ne bi mogle, preko zahtevanog i realizovanog interfejsa

Primenljivost:
Kada postoji potreba da se koristi neka raspoloživa klasa koja nema interfejs kakav odgovara
Kada postoji potreba da se projektuje reupotrebljiva klasa koja sarađuje sa nepovezanim i nepredviđenim klasama, tj klasama čiji interfejsi nisu kompatabilni
Specifično objektni:
Ako treba koristiti nekoliko postojećih klasa, ali je nepraktično adaptirati njihove interfejse višestrukim izvođenjem iz svake od tih klasa

Učesnici:
Cilj definiše domenski-specifičan interfejs koji koristi klijent
Klijent sarađuje sa objektima koji poštuju interfejs cilj
Adaptirani definiše postojeću implementaciju sa drugačijim interfejsom koji zahteva adaptiranje
Adapter adaptira interfejs Adaptirani na interfejs Cilj

Posledice:
Klasni adapter:
- Ne odgovara kada se želi istovremeno adaptiranje više potklasa neke klase
- Dopušta adapteru kao potklasi da redefiniše metode adapirane natklase
- Uvodi samo jedan objekat i nema potrebe za dodatnom indirekcijom
Objektni adapter:
- Dopušta jednom adapteru da radi sa hijararhijom adaptiranih klasa
- Moguća je dinamička promena adaptiranog objekta iz hijararhije klasa
- Identitet ciljanog objekta i adaptiranog objekta se razlikuje
Dvosmerni adapter:
- Objekat može da se koristi i kao Cilj i kao Adaptirani, postiže se potpuna transparentnost

Implementacija:
Objektni: Agregacija iz adaptiranog u adapter
Klasni: Implementacija interfejsa cilj, i nasleđivanje adaptiranog
U C++ klasni se realizuje javnim izvođenjem iz Cilj a privatnim iz Adaptirani, a ako je potreban dvosmerni, onda sve javno

Povezani uzorci:
