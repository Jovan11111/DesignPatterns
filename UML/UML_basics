- UML je grafički jezik za vizuelizaciju, specifikaciju, konstruisanje i dokumentovanje sistema
- UML koriste svi, analitičari i korisnici kažu šta im treba, projektanti projektuju to, programeri naprave, kontroleri posmatraju strukturu i kažu da li je dobar sistem, bibliotekari kategorizuju komponente i menadžeri usmeravaju kadrove na osnovu potrebnog rada koji treba da se obavi
- Pojavljuje se dosta ovih jezika u 70ima, dosta poznatih ali UML je najbolji
- Elementi UMLa su gradivni blokovi, pravila za njihovo povezivanje i opšti mehanizmi u UML
- Gradivni blokovi su stvari, relacije i dijagrami
- Stvari mogu da budu:
  - Stvari strukture - logički i fizički elementi
  - Stvari ponašanja - dinamički delovi modela
  - Stvari grupisanja - paketi itd
  - Stvari notacije - kao komentari

STVARI STRUKTURE
- Klasa je opis skupa objekata koji dele zajedničke odlike. Može da bude aktivna to znači da ima svoju nit kontrole i da je konkurentna
- Interfejs je skup operacija koje specifiraju šta radi komponenta koja implementira taj interfejs. Interfejsi opisuju ugovor.
- Slučaj korišćenja je opis ksupa sekvenci akcija koje se obavljaju da bi se proizveo neki rezultat. On se realizuje kroz saradnju
- Saradnja opisuje strukturu skupa uloga koje imaju specifične funkcije. Klasa može da učestvuje u više saradnji. Uz pomoć saradnji se opisuju projektni uzorci
- Komponenta je modularni deo sistema koji je u uml1 bio fizička stvar, sad je logička. Komponenta implementira dosta interfejsa, ima ponuđene i zahtevane interfejse, ima stanje i ponašanje itd
- Artefakt je fizički deo sistema, sadrži neke informacije npr izvorni kod, ili neki fajl i slično
- Čvor je fizička stvar koja postoji u vreme izvršenja i to je resurs obrade, poseduje memoriju, može da sadrži artefakte
STVARI PONAŠANJA
- Interakcija je ponašanje koje specifira sekvence poruka koje se razmenjuju između skupa uloga unutar posebnog konteksta. Interakcija uključuje same poruke, aktivnosti na strani prijema i konektore.
- Automat stanja je ponašanje koje specifira samo sekvence stanja kroz koje prolazi neki objekat ili interakcija. Automat stanja sadrži stanja, tranzicije iz jednog u drugo stanje, događaje koji se dešavaju i akcije koje se dešavaju dok se menja stanje, ili kad se promeni ili kad se izlazi iz nekog stanja itd.
STVARI ORGANIZACIJE
- Paket je mehanizam organizacije elemenata u grupe, postoji samo u vreme razvoja. Sem paketa stvari mogu da se pakuju i u modele i u frameworkove
STVARI NOTACIJE
- Napomena je simbol koji izgleda kao mali note u kom se piše opis nečega na šta je nakačena.

RELACIJE
- Zavisnost je semantička relacija između dve stvari u kojoj izmena jedne stvari utiče na drugu stvar, isprekidana strelica
- Asocijacija je relacija koja opisuje skup veza između objekata. Puna strelica koja može da sadrži puno nekih ukrasa
- Generalizacija je relacija u kojoj su neki objekti izvedeni iz drugog - Puna strelica sa velikom glavom
- realizacija je relacija između stvari gde jedna stvar implementira ugovor druge stvari (klasa i interfejs npr) - isprekidana strelica sa velikom glavom

DIJAGRAMI
- Dijagram prikazuje skup povezanih elemenata, koji se crta da bi se sve lakše vizuelizovalo. Posotje razni dijagrami

MEHANIZMI UML-a
Specifikacije - neki element može da se opiše tekstualno nekom sintaksom, npr kada se napravi klasa, u nju se opišu njeni atributi, operacije i odgovornosti. Ako na dijagrami npr neka klasa nema atribute, ne znači to da ih sigurno stvarno nema, nego za ovaj model i pogled koji se trenutno gleda, ti atributi nisu važni pa nisu ni napisani.
Direktni inženjering je kad lepo nacrtaš sve dijagrame i kreneš da radiš i to je to
Reverzni inženjering je kad kreneš malo dijagrame pa malo radiš pa dodaješ na dijagrama i menjaš ih i tako u isto vreme
Ukrasi - Na osnovne grafičke elemente mogu da se dodaju razni ukrasi, npr ako hoćemo da nešto bude apstraktno, onda se to napiše italik slovima i slično
Podele u uml su na apstrakcije i primerke (Klasa-Objekat) i interfejse i implementacije (interfejs-klasa)

UML je otvoren jezik kojem mogu da se dodaju različite stvari kao što su stereotipi, obeležene vrednosti i ograničenja
Stereotip se piše tako što se iznad nečega doda <<ime stereotipa>>, npr to može da bude <<Exception>> ako je neka klasa klasa izuzetka ili <<create>> na zavisnosti ako jedna klasa pravi drugu itd
